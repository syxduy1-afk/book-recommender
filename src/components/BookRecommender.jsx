"use client";

import React, { useState } from "react";

const QUESTIONS = [
  {
    id: "type",
    label: "B·∫°n th√≠ch ti·ªÉu thuy·∫øt (fiction) hay phi h∆∞ c·∫•u (nonfiction)?",
    options: ["Ti·ªÉu thuy·∫øt", "Phi h∆∞ c·∫•u"],
  },
  {
    id: "pace",
    label: "B·∫°n th√≠ch s√°ch c√≥ nh·ªãp nhanh hay ch·∫≠m, nhi·ªÅu suy ng·∫´m?",
    options: ["Nhanh", "Ch·∫≠m v√† nhi·ªÅu suy ng·∫´m"],
  },
  {
    id: "mood",
    label: "B·∫°n mu·ªën ƒë·ªçc m·ªôt cu·ªën s√°ch vui nh·∫π nh√†ng hay nghi√™m t√∫c?",
    options: ["Nh·∫π nh√†ng", "Nghi√™m t√∫c"],
  },
  {
    id: "genre",
    label: "Th·ªÉ lo·∫°i b·∫°n th√≠ch nh·∫•t l√† g√¨?",
    options: [
      "Gi·∫£ t∆∞·ªüng (Fantasy)",
      "Khoa h·ªçc vi·ªÖn t∆∞·ªüng",
      "Trinh th√°m / Ly k·ª≥",
      "L√£ng m·∫°n",
      "Ti·ªÉu thuy·∫øt l·ªãch s·ª≠",
      "Ti·ªÉu s·ª≠",
      "Ph√°t tri·ªÉn b·∫£n th√¢n",
      "Kh√¥ng c√≥ s·ªü th√≠ch c·ª• th·ªÉ",
    ],
  },
  {
    id: "length",
    label: "B·∫°n th√≠ch s√°ch ng·∫Øn hay d√†i?",
    options: ["Ng·∫Øn (‚â§ 300 trang)", "D√†i (> 300 trang)", "Kh√¥ng quan tr·ªçng"],
  },
];

function recommendBook(answers) {
  const { type, genre, mood, pace } = answers;

  if (type === "Phi h∆∞ c·∫•u") {
    if (genre === "Ti·ªÉu s·ª≠")
      return { title: "Steve Jobs ‚Äî Walter Isaacson", why: "M·ªôt cu·ªën ti·ªÉu s·ª≠ ƒë∆∞·ª£c nghi√™n c·ª©u s√¢u, k·ªÉ chuy·ªán h·∫•p d·∫´n." };
    if (genre === "Ph√°t tri·ªÉn b·∫£n th√¢n")
      return { title: "Atomic Habits ‚Äî James Clear", why: "Ng·∫Øn g·ªçn, d·ªÖ √°p d·ª•ng, ƒë·∫ßy ƒë·ªß h·ªá th·ªëng gi√∫p thay ƒë·ªïi th√≥i quen." };
    return { title: "Sapiens ‚Äî Yuval Noah Harari", why: "Kh√°m ph√° l·ªãch s·ª≠ lo√†i ng∆∞·ªùi qua lƒÉng k√≠nh khoa h·ªçc v√† tri·∫øt h·ªçc." };
  }

  if (genre === "Gi·∫£ t∆∞·ªüng (Fantasy)") {
    if (pace === "Ch·∫≠m v√† nhi·ªÅu suy ng·∫´m")
      return { title: "The Name of the Wind ‚Äî Patrick Rothfuss", why: "M·ªôt thi√™n s·ª≠ thi nh√¢n v·∫≠t gi√†u chi·ªÅu s√¢u." };
    return { title: "The Hobbit ‚Äî J.R.R. Tolkien", why: "Cu·ªôc phi√™u l∆∞u gi·∫£ t∆∞·ªüng c·ªï ƒëi·ªÉn, ng·∫Øn g·ªçn v√† h·∫•p d·∫´n." };
  }

  if (genre === "Khoa h·ªçc vi·ªÖn t∆∞·ªüng")
    return { title: "Dune ‚Äî Frank Herbert", why: "Th·∫ø gi·ªõi r·ªông l·ªõn v·ªõi ch√≠nh tr·ªã, tri·∫øt h·ªçc v√† cu·ªôc phi√™u l∆∞u k·ª≥ vƒ©." };

  if (genre === "Trinh th√°m / Ly k·ª≥") {
    if (mood === "Nh·∫π nh√†ng")
      return { title: "The No. 1 Ladies' Detective Agency ‚Äî Alexander McCall Smith", why: "Trinh th√°m nh·∫π nh√†ng, h√†i h∆∞·ªõc v√† d·ªÖ th∆∞∆°ng." };
    return { title: "Gone Girl ‚Äî Gillian Flynn", why: "M·ªôt ti·ªÉu thuy·∫øt t√¢m l√Ω gi·∫≠t g√¢n ƒë·∫ßy c√∫ twist." };
  }

  if (genre === "L√£ng m·∫°n")
    return { title: "Ki√™u h√£nh v√† ƒê·ªãnh ki·∫øn ‚Äî Jane Austen", why: "T√°c ph·∫©m kinh ƒëi·ªÉn l√£ng m·∫°n, s√¢u s·∫Øc v√† ch√¢m bi·∫øm x√£ h·ªôi." };

  if (genre === "Ti·ªÉu thuy·∫øt l·ªãch s·ª≠")
    return { title: "All the Light We Cannot See ‚Äî Anthony Doerr", why: "M·ªôt c√¢u chuy·ªán c·∫£m ƒë·ªông trong b·ªëi c·∫£nh Th·∫ø chi·∫øn II." };

  if (mood === "Nh·∫π nh√†ng")
    return { title: "Eleanor Oliphant Is Completely Fine ‚Äî Gail Honeyman", why: "M·ªôt c√¢u chuy·ªán ·∫•m √°p, vui nh·ªôn nh∆∞ng c≈©ng ƒë·∫ßy c·∫£m x√∫c." };

  // fallback
  return { title: "The Catcher in the Rye ‚Äî J.D. Salinger", why: "M·ªôt t√°c ph·∫©m ng·∫Øn, gi√†u √Ω nghƒ©a v√† ƒë∆∞·ª£c nhi·ªÅu ng∆∞·ªùi y√™u th√≠ch." };
}

export default function BookRecommender() {
  const [step, setStep] = useState(0);
  const [answers, setAnswers] = useState({});
  const [result, setResult] = useState(null);

  function handleChoose(id, option) {
    const next = { ...answers, [id]: option };
    setAnswers(next);
    if (step + 1 < QUESTIONS.length) {
      setStep(step + 1);
    } else {
      setResult(recommendBook(next));
    }
  }

  function restart() {
    setStep(0);
    setAnswers({});
    setResult(null);
  }

  return (
    <div className="w-full max-w-3xl bg-white rounded-2xl shadow-lg p-8">
      <header className="mb-6">
        <h1 className="text-2xl md:text-3xl font-extrabold text-gray-900">T√¨m cu·ªën s√°ch ti·∫øp theo c·ªßa b·∫°n üìö</h1>
        <p className="text-sm text-gray-600 mt-1">Tr·∫£ l·ªùi v√†i c√¢u h·ªèi ng·∫Øn v√† nh·∫≠n g·ª£i √Ω ph√π h·ª£p.</p>
      </header>

      {!result ? (
        <main>
          <div className="mb-6">
            <div className="text-lg font-semibold text-gray-800">{QUESTIONS[step].label}</div>
            <div className="text-sm text-gray-500 mt-1">C√¢u h·ªèi {step + 1} tr√™n {QUESTIONS.length}</div>
          </div>

          <div className="grid gap-3 grid-cols-1 sm:grid-cols-2">
            {QUESTIONS[step].options.map((opt) => (
              <button
                key={opt}
                onClick={() => handleChoose(QUESTIONS[step].id, opt)}
                className="rounded-xl border border-gray-200 p-4 text-left hover:shadow-md transition-shadow bg-white"
              >
                <div className="font-medium text-gray-800">{opt}</div>
              </button>
            ))}
          </div>

          <div className="mt-6 flex justify-between items-center">
            <button
              onClick={() => setStep(Math.max(0, step - 1))}
              className="text-sm text-gray-600 hover:underline"
              disabled={step === 0}
            >
              ‚Üê Quay l·∫°i
            </button>

            <div className="text-sm text-gray-500">Tho·∫£i m√°i tr·∫£ l·ªùi ‚Äî b·∫°n c√≥ th·ªÉ l√†m l·∫°i t·ª´ ƒë·∫ßu.</div>
          </div>
        </main>
      ) : (
        <main className="text-center">
          <h2 className="text-xl font-bold text-gray-900">Ch√∫ng t√¥i g·ª£i √Ω:</h2>
          <p className="mt-3 text-lg text-indigo-700 font-semibold">{result.title}</p>
          <p className="mt-2 text-gray-600">{result.why}</p>

          <div className="mt-6 flex justify-center gap-3">
            <button
              onClick={restart}
              className="px-4 py-2 rounded-lg bg-indigo-600 text-white font-medium hover:opacity-95"
            >
              L√†m l·∫°i
            </button>
            <a
              href={`https://www.google.com/search?q=${encodeURIComponent(result.title)}`}
              target="_blank"
              rel="noreferrer"
              className="px-4 py-2 rounded-lg border border-gray-200 hover:shadow-sm"
            >
              T√¨m cu·ªën s√°ch n√†y
            </a>
          </div>
        </main>
      )}

      <footer className="mt-8 text-xs text-gray-400">
        ƒê∆∞·ª£c x√¢y d·ª±ng b·∫±ng Next.js (Client Component: BookRecommender)
      </footer>
    </div>
  );
}